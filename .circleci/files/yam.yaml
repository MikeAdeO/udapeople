# global:
#   scrape_interval: 1s
#   evaluation_interval: 1s
#   external_labels:
#     monitor: 'prometheus'
# rule_files:
#  - /etc/prometheus/rules.yml

# alerting:
#   alertmanagers:
#   - static_configs:
#     - targets:
#       - localhost:9093
# scrape_configs:
#   - job_name: 'prometheus'
#     static_configs:
#       - targets: ['localhost:9090']
#   - job_name: 'node'
#     ec2_sd_configs:
#       - region: us-east-1
#         access_key: AKIA35C6RT5YF4ICBCHR
#         secret_key: 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
#         port: 9100


# global:
#   resolve_timeout: 1m
#   slack_api_url: https://hooks.slack.com/services/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

# route:
#   group_by: [Alertname]
#   receiver: alert-me

# receivers:
# - name: 'cicd-pipeline'
#   slack_configs:
#   - channel: '#cicd-pipeline'
#     send_resolved: true
#     icon_url: https://avatars3.githubusercontent.com/u/3380462
#     title: |-
#       [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }} for {{ .CommonLabels.job }}
#       {{- if gt (len .CommonLabels) (len .GroupLabels) -}}
#         {{" "}}(
#         {{- with .CommonLabels.Remove .GroupLabels.Names }}
#           {{- range $index, $label := .SortedPairs -}}
#             {{ if $index }}, {{ end }}
#             {{- $label.Name }}="{{ $label.Value -}}"
#           {{- end }}
#         {{- end -}}
#         )
#       {{- end }}
#     text: >-
#       {{ range .Alerts -}}
#       *Alert:* {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}

#       *Description:* {{ .Annotations.description }}

#       *Details:*
#         {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
#         {{ end }}
#       {{ end }}
global:
  resolve_timeout: 1m
  slack_api_url: 'https://hooks.slack.com/services/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'

route:
  receiver: 'slack-notifications'

receivers:
- name: 'slack-notifications'
  slack_configs:
  - channel: '#cicd-pipeline'
    send_resolved: true
